<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        CAAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAUoCSwGHAVcBWgFdAacDIAEvMAADWQGsA3ABzwNuAc4DbgHOA24BzgNu
        Ac4DbgHOA24BzgNuAc4DbgHOA3ABzwMwAUyQAAMSARgBeAHZAfIB/wGbAdAB5QH/A0EBcgMtAUUCMgEz
        AVEBXwFnAWsBuAGJAdAB6AH/AXIBywHlAf8DLQFFAxQBHAMCAQMQAAPVAf8D+gH/AfcC+QH/AfgC+QH/
        AfYC+AH/AfYC+AH/AfYC+AH/AfUC9gH/AfUC9gH/AfUC9gH/AfsC+gH/Ay4BSJAAAZQB1AHqAf8BbwHc
        AfYB/wGdAdEB5gH/AVcBlAGsAf8BYgGyAccB/wFWAbwB0wH/AVIBxAHeAf8BSQHNAekB/wFWAcoB3wH/
        AYQB1wHsAf8DKgFAAxwBKAMDAQQMAAPWAf8B+wL8Af8D+QH/AfgC+QH/AfgC+QH/A/gB/wH3AvgB/wH3
        AvgB/wP3Af8B9gL3Af8B+wL8Af8DLwFJjAABYwFrAW8BvAF8Ad0B+QH/AXQB3gH3Af8BoAHTAecB/wFE
        AZQBrQH/AVgBsAHIAf8BWAG8AdQB/wFRAcQB3wH/AUoBzQHqAf8BYAHUAewB/wGHAdgB7QH/AyQBNQMf
        AS0DEAEWAwEBAggAA9YB/wP8Af8B+QL6Af8B+QL6Af8B+AL5Af8B+AL5Af8D+AH/AfcC+AH/AfcC+AH/
        A/cB/wH7AvwB/wMvAUmMAAGiAdUB6AH/AYcB3wH6Af8BgQHiAfgB/wGiAdUB6AH/AUIBlAGtAf8BVQGw
        AccB/wFbAb0B1QH/AVgBxwHhAf8BUgHPAesB/wFoAdYB7QH/AYoB2gHuAf8DGgEkAxQBGwMNARIDBgEI
        CAAD1gH/AfwC/QH/A/oB/wP6Af8B+QL6Af8D+QH/AfgC+QH/AfgC+QH/A/gB/wH3AvgB/wH8Av0B/wMv
        AUmMAAGlAdcB6gH/AY4B4QH7Af8BjQHnAfoB/wGfAdkB7QH/AUUBlAGuAf8BVwGtAcUB/wFjAcAB1wH/
        AWIByAHgAf8BXwHSAewB/wFzAdkB7wH/AY4B3AHuAf8DDQERAwcBCgMCAQMMAAPWAf8D/QH/A/sB/wH6
        AvsB/wP6Af8B+QL6Af8D+QH/AfgC+QH/AfgC+QH/A/gB/wH8Av0B/wMvAUmMAAGoAdkB6wH/AZUB5QH9
        Af8BmgHtAfwB/wGWAeoB+gH/AUgBlQGuAf8BXAGsAcUB/wFrAcMB2QH/AWsBzAHiAf8BbAHXAe8B/wGA
        Ad0B8AH/AVIBVgFXAZsDAgEDFAAD1gH/Af0C/gH/A/sB/wP7Af8D+gH/A/oB/wH5AvoB/wP5Af8D+QH/
        AfgC+QH/A/0B/wMvAUmMAAGrAdoB7QH/AZsB5wH9Af8BpgHyAf0B/wGuAfEB/QH/AUwBlwGvAf8BYQGv
        AcYB/wFyAccB2wH/AXUB0AHlAf8BeQHbAfEB/wGiAeYB9QH/AwQBBhgAA9YB/wP+Af8B+wL8Af8D+wH/
        A/sB/wH6AvsB/wP6Af8B+QL6Af8B+QL6Af8B+AL5Af8B/QL+Af8DLwFJjAABrgHcAe8B/wGeAekB/gH/
        Aa8B9gL/AcEB9gH+Af8BUAGYAbAB/wFmAbMBxwH/AXoByQHeAf8BgwHUAegB/wGHAd4B8gH/Aa0B6gH3
        Af8cAAPWAf8D/gH/A/wB/wP8Af8D+wH/A/sB/wH6AvsB/wP6Af8B+QL6Af8D+QH/A/4B/wMvAUmMAAGx
        Ad4B8AH/AZ4B6QH+Af8BsgH3Av8B0gH6Av8BUwGaAbIB/wFsAbUBygH/AYQBzQHfAf8BigHYAeoB/wGR
        AeEB9AH/AbwB7gH5Af8cAAPWBf8B/AL9Af8D/AH/A/wB/wH7AvwB/wP7Af8D+wH/AfoC+wH/A/oB/wH+
        A/8DLwFJjAABtAHgAfIB/wGeAekB/gH/AbIB9wL/Ad4B/AL/AVcBnQGzAf8BcwG6Ac0B/wGKAdEB4gH/
        AZEB2wHsAf8BmgHkAfUB/wHKAfIB+gH/HAAD1gX/A/0B/wP9Af8D/AH/A/wB/wH7AvwB/wP7Bf8D6QH/
        A80B/wMrAUKMAAG2AeIB8wH/AZ4B6QH+Af8BsgH3Av8B/AP/AV4BogG4Af8BgAHEAdYB/wGSAdUB5gH/
        AZkB3gHvAf8BoAHnAfYB/wHPAfMB+gH/HAAD1gX/A/0B/wP9Af8B/AL9Af8D/AH/A/wB/wH7AvwB/wPa
        Bf8DxAH/AwMBBIwAAbkB4wH0Af8BngHpAf4B/wGyAfcC/wH6Af4C/wFvAbUBxwH/AYwBzgHeAf8BogHm
        AfQB/wGoAekB9wH/AasB6gH3Af8B1wH1AfwB/xwAA9YF/wH9Av4B/wP9Af8D/QH/A/0B/wP8Af8D/AH/
        A9wB/wPMAf0DAAEBkAABuwHlAfUB/wGeAekB/gH/Ac8B+QH+Af8BmQHNAd8B/wGSAdgB5wH/AagB6wH3
        Af8BsQHtAfkB/wHEAfIB+wH/Ad8B+AH9Af8B3gH4Af0B/xwAA9UB/wPqAf8D6AH/A+gB/wPoAf8D6AH/
        A+gB/wPqAf8DxgH/mAABvAHmAfYB/wG1AfAB/AH/AaUB2AHlAf8BugHuAfcB/wG5AfAB+AH/AakB7AH3
        Af8BhgHIAdIB9QFTAVkBWgGfAzoBYAMLAQ/YAAMdASoBRwJIAX8DEgEY8AABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeMB/wHAAQMEAAHAAQMBwAEDBAABwAEBAcABAwQAAYABAAHA
        AQMEAAGAAQABwAEDBAABgAEBAcABAwQAAYABBwHAAQMEAAGAAQ8BwAEDBAABgAEfAcABAwQAAYABHwHA
        AQMEAAGAAR8BwAEDBAABgAEfAcABAwQAAYABHwHAAQcEAAGAAR8BwAEfBAABgAEfAv8EAAGPA/8EAAs=
</value>
  </data>
</root>